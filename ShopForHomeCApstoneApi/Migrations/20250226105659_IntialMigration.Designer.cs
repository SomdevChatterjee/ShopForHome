// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopForHomeCApstoneApi.Models;

#nullable disable

namespace ShopForHomeCApstoneApi.Migrations
{
    [DbContext(typeof(ShopForHomeDbContext))]
    [Migration("20250226105659_IntialMigration")]
    partial class IntialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Furniture",
                            CreatedAt = new DateTime(2025, 2, 26, 16, 26, 58, 796, DateTimeKind.Local).AddTicks(7443)
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Home Decor",
                            CreatedAt = new DateTime(2025, 2, 26, 16, 26, 58, 796, DateTimeKind.Local).AddTicks(7458)
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Lighting",
                            CreatedAt = new DateTime(2025, 2, 26, 16, 26, 58, 796, DateTimeKind.Local).AddTicks(7459)
                        });
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.DiscountCoupon", b =>
                {
                    b.Property<int>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CouponId"));

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CouponId");

                    b.ToTable("DiscountCoupons");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CouponId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            CategoryName = "Furniture",
                            CreatedAt = new DateTime(2025, 2, 26, 16, 26, 58, 796, DateTimeKind.Local).AddTicks(7474),
                            Description = "Solid wood dining table with modern design.",
                            ImageUrl = "https://m.media-amazon.com/images/I/41aSOoUwLYL._SY300_SX300_QL70_FMwebp_.jpg",
                            Price = 15000m,
                            ProductName = "Wooden Dining Table",
                            Rating = 4.5,
                            StockQuantity = 20
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            CategoryName = "Home Decor",
                            CreatedAt = new DateTime(2025, 2, 26, 16, 26, 58, 796, DateTimeKind.Local).AddTicks(7481),
                            Description = "Elegant wall mirror for home décor.",
                            ImageUrl = "https://m.media-amazon.com/images/I/51aA2qy0xyL._SY300_SX300_QL70_FMwebp_.jpg",
                            Price = 3500m,
                            ProductName = "Decorative Wall Mirror",
                            Rating = 4.2000000000000002,
                            StockQuantity = 30
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            CategoryName = "Lighting",
                            CreatedAt = new DateTime(2025, 2, 26, 16, 26, 58, 796, DateTimeKind.Local).AddTicks(7482),
                            Description = "Energy-efficient LED ceiling light.",
                            ImageUrl = "https://www.nobroker.in/blog/wp-content/uploads/2024/03/19-ceiling-light-designs-to-transform-your-home.jpg",
                            Price = 2200m,
                            ProductName = "LED Ceiling Light",
                            Rating = 4.7999999999999998,
                            StockQuantity = 50
                        });
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.SalesReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReportPeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReportPeriodStart")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalSales")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ReportId");

                    b.ToTable("SalesReports");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.StockAlert", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId");

                    b.ToTable("StockAlerts");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Sonewadi,Sangamner,Maharashtra,422611",
                            CreatedAt = new DateTime(2025, 2, 26, 16, 26, 58, 796, DateTimeKind.Local).AddTicks(7804),
                            Email = "abhi@example.com",
                            FullName = "Abhishek Jaybhaye",
                            NormalPassword = "Abhishek@123",
                            PasswordHash = "01d56e070158abb1ddacba20de006e9ae8fc26280e6ab5ecf9dcda079949fb4e",
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Address = "Sample,Sample1,Maharashtra,422611",
                            CreatedAt = new DateTime(2025, 2, 26, 16, 26, 58, 796, DateTimeKind.Local).AddTicks(7815),
                            Email = "user@example.com",
                            FullName = "Regular User",
                            NormalPassword = "User@123",
                            PasswordHash = "3e7c19576488862816f13b512cacf3e4ba97dd97243ea0bd6a2ad1642d86ba72",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.UserCoupon", b =>
                {
                    b.Property<int>("UserCouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserCouponId"));

                    b.Property<int?>("CouponId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserCouponId");

                    b.HasIndex("CouponId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCoupons");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Wishlist", b =>
                {
                    b.Property<int>("WishlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WishlistId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("WishlistId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Cart", b =>
                {
                    b.HasOne("ShopForHomeCApstoneApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopForHomeCApstoneApi.Models.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Order", b =>
                {
                    b.HasOne("ShopForHomeCApstoneApi.Models.DiscountCoupon", "DiscountCoupon")
                        .WithMany()
                        .HasForeignKey("CouponId");

                    b.HasOne("ShopForHomeCApstoneApi.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscountCoupon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.OrderItem", b =>
                {
                    b.HasOne("ShopForHomeCApstoneApi.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopForHomeCApstoneApi.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Product", b =>
                {
                    b.HasOne("ShopForHomeCApstoneApi.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.User", b =>
                {
                    b.HasOne("ShopForHomeCApstoneApi.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.UserCoupon", b =>
                {
                    b.HasOne("ShopForHomeCApstoneApi.Models.DiscountCoupon", "DiscountCoupon")
                        .WithMany("UserCoupons")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopForHomeCApstoneApi.Models.User", "User")
                        .WithMany("UserCoupons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscountCoupon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Wishlist", b =>
                {
                    b.HasOne("ShopForHomeCApstoneApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopForHomeCApstoneApi.Models.User", "User")
                        .WithMany("Wishlists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.DiscountCoupon", b =>
                {
                    b.Navigation("UserCoupons");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Product", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ShopForHomeCApstoneApi.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");

                    b.Navigation("UserCoupons");

                    b.Navigation("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
